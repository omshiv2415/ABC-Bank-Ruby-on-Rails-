== README
ABC Banks Application (Ruby on Rails) Msc Software Engineering
1. ABC Banking Project Download link from GitHub

https://github.com/omshiv2415/ABC-Bank-Ruby-on-Rails-

2. View Application Online

https://abcbankmsc.herokuapp.com

3. Setup Guide Instruction to run this project.

1. Download the project file form GitHub or clone the repository

git@github.com:omshiv2415/ABC-Bank-Ruby-on-Rails-.git

2. Type the following command in you console but make sure you are in project directory

Command – bundle install  -- without production (please type the command don’t do copy paste)

3. Type the following command for data migration (create database)

Command – rake db:migrate

4. Run Rails server to view this project in production.

Command – rails server –b 0.0.0.0


Things you may want to cover:

* Ruby version
ruby 2.2.1p85 (2015-02-26 revision 49769) [x86_64-linux]
Rails 4.2.5
* System dependencies
# Bundle edge Rails instead: gem 'rails', github: 'rails/rails'
gem 'rails', '4.2.5'
# Use sqlite3 as the database for Active Record
gem 'devise'
gem 'twitter-bootstrap-rails'
gem 'devise-bootstrap-views'
gem 'protected_attributes'
gem 'will_paginate', '3.0.7'
gem 'bootstrap-will_paginate', '0.0.10'
gem 'bootstrap-sass', '~> 3.3.5'
# Use SCSS for stylesheets
gem 'sass-rails', '~> 5.0'
# Use Uglifier as compressor for JavaScript assets
gem 'uglifier', '>= 1.3.0'
# Use CoffeeScript for .coffee assets and views
gem 'coffee-rails', '~> 4.1.0'
# See https://github.com/rails/execjs#readme for more supported runtimes
# gem 'therubyracer', platforms: :ruby

# Use jquery as the JavaScript library
gem 'jquery-rails'
# Turbolinks makes following links in your web application faster. Read more: https://github.com/rails/turbolinks
gem 'turbolinks'
# Build JSON APIs with ease. Read more: https://github.com/rails/jbuilder
gem 'jbuilder', '~> 2.0'
# bundle exec rake doc:rails generates the API under doc/api.
gem 'sdoc', '~> 0.4.0', group: :doc

# Use ActiveModel has_secure_password
# gem 'bcrypt', '~> 3.1.7'

# Use Unicorn as the app server
# gem 'unicorn'

# Use Capistrano for deployment
# gem 'capistrano-rails', group: :development

group :development, :test do
	gem 'sqlite3'
  # Call 'byebug' anywhere in the code to stop execution and get a debugger console
  gem 'byebug'
end

group :development do
  # Access an IRB console on exception pages or by using <%= console %> in views
  gem 'web-console', '~> 2.0'
  gem "rails-erd"
	gem 'railroady'
  # Spring speeds up development by keeping your application running in the background. Read more: https://github.com/rails/spring
  gem 'spring'
end
group :production do
gem 'pg'
gem 'rails_12factor'
end
* Configuration
1 Download the  application
or
2 Clone the git

* Database creation

* Database initialization

* How to run the test suite

* Services (job queues, cache servers, search engines, etc.)

* Deployment instructions

* ...


Please feel free to use a different markup language if you do not plan to run
<tt>rake doc:app</tt>.
== README

This is test application of ruby on rails
Important command
* rvm reinstall ruby-2.2.1
* rake db:migrate
* rails server -b 0.0.0
* rake routes
* rails generate scaffold Article title:string description:text
* rails generate migration create_users
* git commit -m "type message to commit"
* git add -A
* rails new project name
* cd "change directory" and cd .. go to back directory
* heroku keys:add
* heroku create
* heroku login
* bundle install --without production
* cat ~/.ssh/id_rsa.pub "getting public key"
* git config --global user.email "omshiv2415@yahoo.co.uk"
* git config --global user.name "omshiv2415"
* git checkout -f
* git config
* rails g bootstrap:install
// drop talble
go to rails console
ActiveRecord::Migration.drop_table(:users)

// setup git directory

git init
git add -A
git commit -m "new project created"
git checkout -f
git status

1. get the key by typing command inside command line
cat ~/.ssh/id_rsa.pub

2. add shh key to github account inside setting
copy the key and paste in settings SSH key

3. create new repository on github account
git init
git add README.md
git commit -m "first commit"
git remote add origin git@github.com:omshiv2415/exercise_ruby.git
git push -u origin master

git checkout -b create-users
rails generate migration create_users
//add

// Deploy ruby application to heroku

1 open gemfile inside your project
move gem 'sqlite3' to group :development, :test do

2. create new grup
group :production do
  gem 'pg'
  gem 'rails_12factor'
end

3. bundle install --without production

4. install nitrous environment toolbelt
wget -qO- https://toolbelt.heroku.com/install-ubuntu.sh | sh

5. heroku login
enter email and password

6. heroku create

7. heroku keys:add

8. git push heroku master

9. heroku run rake db:migrate


10. Deploy changes
cd
11. heroku apps:rename msc-abc-bank
 git add -A
 git commit -am "make it better"
 git push heroku master

This README would normally document whatever steps are necessary to get the
application up and running.

Things you may want to cover:

* Ruby version

* System dependencies

* Configuration

* Database creation

* Database initialization

* How to run the test suite

* Services (job queues, cache servers, search engines, etc.)

* Deployment instructions

* ...
* rails destroy scaffold  Comment

Please feel free to use a different markup language if you do not plan to run
<tt>rake doc:app</tt>.
rails generate migration add_user_id_to_articles